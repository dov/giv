from __future__ import print_function
import os
import re
import glob

linkflags = []
cppflags = []

if ARGUMENTS.get('debug', 0):
    cppflags = ['-g', '-Wall']
else:
    cppflags = ['-O2']

cppflags += ['-Wno-write-strings',
             '-Wno-deprecated-declarations',
             '-Wno-misleading-indentation',
             '-Wno-int-in-bool-context',
             '-std=c++1y'
             ]

gcc_version = os.popen('gcc --version').read()
cppflags += [
    '-Wno-int-in-bool-context',
]

env = Environment(LINKFLAGS = linkflags,
                  tools = ['default','textfile'])

if ARGUMENTS.get('mingw', 0) or ARGUMENTS.get('mingw64', 0):
    if ARGUMENTS.get('mingw', 0):
        env['HOST']='w32'
        env['HOSTBITS']='32'
        env['ARCH']='i686-w64-mingw32'
        env['LIBGCCDLL'] = "libgcc_s_sjlj-1.dll"
    elif ARGUMENTS.get('mingw64', 0):
        env['HOST']='w64'
        env['HOSTBITS']='64'
        env['ARCH']='x86_64-w64-mingw32'
        env['LIBGCCDLL'] = "libgcc_s_seh-1.dll"

    env['CC']='${ARCH}-gcc'
    env['CXX']='${ARCH}-g++'
    env['AR']='${ARCH}-ar'
    env['RANLIB']='${ARCH}-ranlib'
    env['WINDRES']='${ARCH}-windres -o COFF'
    env['LOCAL_DIR']='ming${HOST}'
    env['PKGCONFIG'] = "env PKG_CONFIG_PATH=/usr/${ARCH}/sys-root/mingw/lib/pkgconfig:/usr/local/${LOCAL_DIR}/lib/pkgconfig pkg-config"
    env['OBJSUFFIX']=".obj"
    env['PROGSUFFIX'] = ".exe"
    env['PREFIX'] = "/usr/local/${LOCAL_DIR}"
    env['AGG'] = "aggx"
    env['ROOT'] = ""
    env['VARIANT'] = 'DDE'

    cppflags += ['-Wno-deprecated-declarations',
                 #'-mincoming-stack-boundary=2'
                 '-Wno-attributes',
                 ]

    env.Append(LINKFLAGS=["-mwindows"],
               CPPPATH=['include'])
else:
    pkgconfig = "env PKG_CONFIG_PATH=/usr/local/lib/pkgconfig pkg-config"
    env.Append(PKGCONFIG = pkgconfig,
               CPPPATH = ["/usr/local/include",
                          "/usr/include/opencv"],
               CPPDEFINES = ['ARCH=\\"x86_64 GNU/Linux\\"'],
               GLEW='GLEW',
               LINKFLAGS = ["-pthread"]
               )


#src = ['win_eventlog_sample.cpp'] + glob.glob('3rdparty/spdlog/src/*.cpp')
#
#bin = env.Program('win_eventlog_sample',
#                  src)

